basePath: /v1
definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  models.Bank:
    properties:
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      swift:
        type: string
    type: object
  models.BankAccount:
    properties:
      accountNumber:
        type: string
      bank:
        $ref: '#/definitions/models.Bank'
      bankAccountType:
        $ref: '#/definitions/models.BankAccountType'
      holderName:
        type: string
      holderRut:
        type: string
    type: object
  models.BankAccountType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.CustomerInfo:
    properties:
      bankAccount:
        $ref: '#/definitions/models.BankAccount'
      birthDate:
        type: string
      customerID:
        example: 0ead24fe707011edb02022276f53
        type: string
      email:
        type: string
      emailStatus:
        type: string
      employee:
        type: boolean
      gender:
        $ref: '#/definitions/models.Gender'
      lastName:
        type: string
      motherSurname:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      rut:
        example: 11111111-1
        type: string
    type: object
  models.Gender:
    properties:
      id:
        enum:
        - 1
        - 2
        - 3
        - 6
        - 7
        type: integer
      name:
        enum:
        - Mujer
        - ' Hombre'
        - ' Prefiero no decir'
        - ' No me identifico con las opciones disponibles'
        - ' otros'
        type: string
    type: object
  request.ChangeLoginID:
    properties:
      loginId:
        type: string
      newLoginId:
        type: string
    required:
    - loginId
    - newLoginId
    type: object
  request.CheckAccountConfirmation:
    properties:
      user:
        example: john.doe@email.com
        type: string
    required:
    - user
    type: object
  request.CheckUserExists:
    properties:
      email:
        example: john.doe@email.com
        type: string
      rut:
        example: 13851140-5
        type: string
    required:
    - email
    - rut
    type: object
  request.ConfirmAccountNotificationResend:
    properties:
      user:
        example: john.doe@email.com
        type: string
    required:
    - user
    type: object
  request.DeleteAccount:
    properties:
      loginId:
        type: string
    required:
    - loginId
    type: object
  request.PasswordChange:
    properties:
      confirm_password:
        example: Pa$$w0rd
        type: string
      current_password:
        example: Pa$$w0rd
        type: string
      new_password:
        example: Pa$$w0rd
        type: string
      user:
        example: john.doe@email.com
        type: string
    required:
    - confirm_password
    - current_password
    - new_password
    - user
    type: object
  request.ResetPassword:
    properties:
      confirm_password:
        example: Pa$$w0rd
        type: string
      new_password:
        example: Pa$$w0rd
        type: string
      token:
        example: ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O
        type: string
      user:
        type: string
    required:
    - confirm_password
    - new_password
    - token
    - user
    type: object
  request.TermsAndConditions:
    properties:
      acceptedAt:
        type: integer
      isAccepted:
        type: boolean
      origin:
        type: string
    required:
    - acceptedAt
    - isAccepted
    - origin
    type: object
  request.TokenRefresh:
    properties:
      token:
        example: zmeax95wF+Ha8y3awjtr4i0ZGlDGjkRw3aPd8qNWYIW7DMbDW7fQ==
        type: string
    required:
    - token
    type: object
  request.TokenValidate:
    properties:
      token:
        example: zmeax95wF+Ha8y3awjtr4i0ZGlDGjkRw3aPd8qNWYIW7DMbDW7fQ==
        type: string
    required:
    - token
    type: object
  request.UserLogin:
    properties:
      password:
        type: string
      user:
        type: string
    required:
    - password
    - user
    type: object
  request.UserLogout:
    properties:
      sessionID:
        type: string
      user:
        type: string
    required:
    - sessionID
    - user
    type: object
  request.UserPasswordReset:
    properties:
      loginId:
        example: john.doe@email.com
        type: string
      rut:
        example: 44444444-4
        type: string
    type: object
  request.UserRUT:
    properties:
      rut:
        example: 13851140-5
        type: string
    required:
    - rut
    type: object
  request.UserRegisterRequest:
    properties:
      birthDate:
        example: 10-10-1980
        type: string
      email:
        example: john.doe@email.com
        type: string
      genderId:
        enum:
        - 1
        - 2
        - 3
        - 6
        - 7
        type: integer
      lastName:
        type: string
      motherSurname:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      rut:
        type: string
      termsAndConditions:
        $ref: '#/definitions/request.TermsAndConditions'
    required:
    - email
    - lastName
    - name
    - password
    - rut
    - termsAndConditions
    type: object
  response.AccountConfirmCheck:
    properties:
      message:
        type: string
      valid:
        type: boolean
    type: object
  response.CheckUserExists:
    properties:
      maskedEmail:
        type: string
      message:
        type: string
      userExists:
        type: boolean
    type: object
  response.Gender:
    properties:
      id:
        enum:
        - 1
        - 2
        - 3
        - 6
        - 7
        type: integer
      name:
        enum:
        - Mujer
        - ' Hombre'
        - ' Prefiero no decir'
        - ' No me identifico con las opciones disponibles'
        - ' otros'
        type: string
    type: object
  response.GenerateResetTokenResponse:
    properties:
      maskedEmail:
        type: string
      message:
        type: string
    type: object
  response.Login:
    properties:
      authToken:
        example: MDkyMDQyMDE4zHKOO4hRw3aPd8qNWYIW7DMbDW7fQ==
        type: string
      creationTime:
        example: 1686685725423
        type: integer
      refreshToken:
        example: MDE4zHKOO4hRw3aPd8qNWYIW7DMbDWs37fR==
        type: string
      sessionID:
        example: 30c33dc8-5js3-4af1-a5c2-d40ecb60bee
        type: string
      user:
        $ref: '#/definitions/models.CustomerInfo'
    type: object
  response.Message:
    properties:
      message:
        type: string
    type: object
  response.PasswordChangeStatus:
    properties:
      refreshToken:
        example: MDgyMVty6gcZ5+ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O1plCn5lFTZq00ilDDyoZH7yoA
        type: string
      token:
        example: MDkyMDQyMDE4zW1Q0n5+bjOVymIxjUDOvPubvHnrhUsZv6hQcR/K1Tg9Dp8DL/0X+WhTy21eKQaA2w0FIyxw==
        type: string
    type: object
  response.PasswordResetResponse:
    properties:
      errorMessage:
        type: string
      isRedirection:
        type: boolean
      redirect:
        type: string
    type: object
  response.ResetTokenStatus:
    properties:
      email:
        example: john.doe@email.com
        type: string
      token:
        example: ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O
        type: string
      url:
        type: string
      valid:
        type: boolean
    type: object
  response.TokenStatus:
    properties:
      message:
        type: string
      user:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact:
    email: cl-ecommerce-origin1@email.wal-mart.com
    name: API Support
  description: This is an authentication API used to register new customers, authenticate
    them and manage their session
  title: HeiKomInn API
  version: "1.0"
paths:
  /auth/changePassword/reset:
    post:
      consumes:
      - application/json
      description: Reset password by reset token
      parameters:
      - description: User email
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.ResetPassword'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PasswordResetResponse'
      summary: ResetPassword
      tags:
      - auth
  /auth/changePassword/validate:
    get:
      consumes:
      - application/json
      description: Validate reset token method for the "forgot password" use case
      parameters:
      - description: Reset token
        in: query
        name: params
        required: true
        type: string
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResetTokenStatus'
      summary: Validate reset token method for the "forgot password" use case
      tags:
      - auth
  /auth/forgotPassword:
    post:
      consumes:
      - application/json
      description: Generate reset token and send it by email
      parameters:
      - description: User email or RUT
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.UserPasswordReset'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GenerateResetTokenResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Generate Reset Token
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login that authentication tokens
      parameters:
      - description: user credentials
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.UserLogin'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Login'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and expired authentication tokens
      parameters:
      - description: user session data
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.UserLogout'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Logout user
      tags:
      - auth
  /auth/token/refresh:
    post:
      consumes:
      - application/json
      description: Refresh authentication token
      parameters:
      - description: Authentication token
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.TokenRefresh'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokenStatus'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Refresh Token
      tags:
      - auth
  /auth/token/validate:
    post:
      consumes:
      - application/json
      description: Validate authentication token
      parameters:
      - description: Authentication token
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.TokenValidate'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokenStatus'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Validate Token
      tags:
      - auth
  /confirmAccount/notification/resend:
    post:
      consumes:
      - application/json
      description: Resend confirmation email to customer
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.ConfirmAccountNotificationResend'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Resend confirmation email to customer
      tags:
      - user
  /user/changeLoginId:
    put:
      consumes:
      - application/json
      description: Changes the user's email
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.ChangeLoginID'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Changes the user's email
      tags:
      - user
  /user/changePassword:
    post:
      consumes:
      - application/json
      description: Change the password for a user already logged in
      parameters:
      - description: user new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.PasswordChange'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PasswordChangeStatus'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Change the password for a user already logged in
      tags:
      - user
  /user/checkConfirmation:
    post:
      consumes:
      - application/json
      description: Verifies customer account confirmation
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.CheckAccountConfirmation'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AccountConfirmCheck'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Verifies customer account confirmation
      tags:
      - user
  /user/confirmAccount:
    get:
      consumes:
      - application/json
      description: Confirm a user's account after signup step
      parameters:
      - description: JWT encrypted email
        in: query
        name: params
        required: true
        type: string
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Confirm a user's account after signup step
      tags:
      - user
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Find the account, validate and delete it in access and identity
        server
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.DeleteAccount'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Delete user's account in access and identity server
      tags:
      - user
  /user/exists:
    post:
      consumes:
      - application/json
      description: Verifies the existence of customer's Rut and email
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.CheckUserExists'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CheckUserExists'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Verifies if user email and rut exists
      tags:
      - user
  /user/forgotPassword/validateUser:
    post:
      consumes:
      - application/json
      description: Verifies if a given rut is related to an account
      parameters:
      - description: body request
        in: body
        name: bodyRequest
        required: true
        schema:
          $ref: '#/definitions/request.UserRUT'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CheckUserExists'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Verifies if a given rut is related to an account
      tags:
      - user
  /user/genders:
    get:
      description: Get a list of genders
      parameters:
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Gender'
            type: array
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: List genders
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Sign up a new customer. This involves the creation of a new user
        in CDP, IAM and then, the delivery of an email through Hermes
      parameters:
      - description: customer data
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      - description: service name
        example: CL-ECOMMERCE-ORIGIN-HEIKOMINN
        in: header
        name: WM_SVC.NAME
        required: true
        type: string
      - description: service environment
        example: stg:1.0.0
        in: header
        name: WM_SVC.ENV
        required: true
        type: string
      - description: application consumer ID
        example: 359ffd43-1539-4ff0-8ec8-54bc14de40a3
        in: header
        name: WM_CONSUMER.ID
        required: true
        type: string
      - description: timestamp of request in milliseconds
        example: 1668019410000
        in: header
        name: WM_CONSUMER.INTIMESTAMP
        required: true
        type: number
      - description: base64 authorization signature generated from consumerID, timestamp
          and key_version
        in: header
        name: WM_SEC.AUTH_SIGNATURE
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Message'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/echo.HTTPError'
            - properties:
                message:
                  type: string
              type: object
      summary: Register a new user
      tags:
      - user
swagger: "2.0"
