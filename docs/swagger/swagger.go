// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "cl-ecommerce-origin1@email.wal-mart.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/changePassword/reset": {
            "post": {
                "description": "Reset password by reset token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "ResetPassword",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ResetPassword"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PasswordResetResponse"
                        }
                    }
                }
            }
        },
        "/auth/changePassword/validate": {
            "get": {
                "description": "Validate reset token method for the \"forgot password\" use case",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate reset token method for the \"forgot password\" use case",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reset token",
                        "name": "params",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResetTokenStatus"
                        }
                    }
                }
            }
        },
        "/auth/forgotPassword": {
            "post": {
                "description": "Generate reset token and send it by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate Reset Token",
                "parameters": [
                    {
                        "description": "User email or RUT",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserPasswordReset"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GenerateResetTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login that authentication tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "user credentials",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLogin"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Login"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout user and expired authentication tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "description": "user session data",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLogout"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "post": {
                "description": "Refresh authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "Authentication token",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TokenRefresh"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/token/validate": {
            "post": {
                "description": "Validate authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate Token",
                "parameters": [
                    {
                        "description": "Authentication token",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TokenValidate"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/confirmAccount/notification/resend": {
            "post": {
                "description": "Resend confirmation email to customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Resend confirmation email to customer",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfirmAccountNotificationResend"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/changeLoginId": {
            "put": {
                "description": "Changes the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Changes the user's email",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChangeLoginID"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/changePassword": {
            "post": {
                "description": "Change the password for a user already logged in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change the password for a user already logged in",
                "parameters": [
                    {
                        "description": "user new password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PasswordChange"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PasswordChangeStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/checkConfirmation": {
            "post": {
                "description": "Verifies customer account confirmation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verifies customer account confirmation",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CheckAccountConfirmation"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AccountConfirmCheck"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/confirmAccount": {
            "get": {
                "description": "Confirm a user's account after signup step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Confirm a user's account after signup step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT encrypted email",
                        "name": "params",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "description": "Find the account, validate and delete it in access and identity server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user's account in access and identity server",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteAccount"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/exists": {
            "post": {
                "description": "Verifies the existence of customer's Rut and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verifies if user email and rut exists",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CheckUserExists"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckUserExists"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/forgotPassword/validateUser": {
            "post": {
                "description": "Verifies if a given rut is related to an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Verifies if a given rut is related to an account",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "bodyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRUT"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckUserExists"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/genders": {
            "get": {
                "description": "Get a list of genders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "List genders",
                "parameters": [
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.Gender"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Sign up a new customer. This involves the creation of a new user in CDP, IAM and then, the delivery of an email through Hermes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "customer data",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRegisterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "example": "CL-ECOMMERCE-ORIGIN-HEIKOMINN",
                        "description": "service name",
                        "name": "WM_SVC.NAME",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "stg:1.0.0",
                        "description": "service environment",
                        "name": "WM_SVC.ENV",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "359ffd43-1539-4ff0-8ec8-54bc14de40a3",
                        "description": "application consumer ID",
                        "name": "WM_CONSUMER.ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "example": 1668019410000,
                        "description": "timestamp of request in milliseconds",
                        "name": "WM_CONSUMER.INTIMESTAMP",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base64 authorization signature generated from consumerID, timestamp and key_version",
                        "name": "WM_SEC.AUTH_SIGNATURE",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "models.Bank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "swift": {
                    "type": "string"
                }
            }
        },
        "models.BankAccount": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "bankAccountType": {
                    "$ref": "#/definitions/models.BankAccountType"
                },
                "holderName": {
                    "type": "string"
                },
                "holderRut": {
                    "type": "string"
                }
            }
        },
        "models.BankAccountType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CustomerInfo": {
            "type": "object",
            "properties": {
                "bankAccount": {
                    "$ref": "#/definitions/models.BankAccount"
                },
                "birthDate": {
                    "type": "string"
                },
                "customerID": {
                    "type": "string",
                    "example": "0ead24fe707011edb02022276f53"
                },
                "email": {
                    "type": "string"
                },
                "emailStatus": {
                    "type": "string"
                },
                "employee": {
                    "type": "boolean"
                },
                "gender": {
                    "$ref": "#/definitions/models.Gender"
                },
                "lastName": {
                    "type": "string"
                },
                "motherSurname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "rut": {
                    "type": "string",
                    "example": "11111111-1"
                }
            }
        },
        "models.Gender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        6,
                        7
                    ]
                },
                "name": {
                    "type": "string",
                    "enum": [
                        "Mujer",
                        " Hombre",
                        " Prefiero no decir",
                        " No me identifico con las opciones disponibles",
                        " otros"
                    ]
                }
            }
        },
        "request.ChangeLoginID": {
            "type": "object",
            "required": [
                "loginId",
                "newLoginId"
            ],
            "properties": {
                "loginId": {
                    "type": "string"
                },
                "newLoginId": {
                    "type": "string"
                }
            }
        },
        "request.CheckAccountConfirmation": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "string",
                    "example": "john.doe@email.com"
                }
            }
        },
        "request.CheckUserExists": {
            "type": "object",
            "required": [
                "email",
                "rut"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@email.com"
                },
                "rut": {
                    "type": "string",
                    "example": "13851140-5"
                }
            }
        },
        "request.ConfirmAccountNotificationResend": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "string",
                    "example": "john.doe@email.com"
                }
            }
        },
        "request.DeleteAccount": {
            "type": "object",
            "required": [
                "loginId"
            ],
            "properties": {
                "loginId": {
                    "type": "string"
                }
            }
        },
        "request.PasswordChange": {
            "type": "object",
            "required": [
                "confirm_password",
                "current_password",
                "new_password",
                "user"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                },
                "current_password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                },
                "new_password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                },
                "user": {
                    "type": "string",
                    "example": "john.doe@email.com"
                }
            }
        },
        "request.ResetPassword": {
            "type": "object",
            "required": [
                "confirm_password",
                "new_password",
                "token",
                "user"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                },
                "new_password": {
                    "type": "string",
                    "example": "Pa$$w0rd"
                },
                "token": {
                    "type": "string",
                    "example": "ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.TermsAndConditions": {
            "type": "object",
            "required": [
                "acceptedAt",
                "isAccepted",
                "origin"
            ],
            "properties": {
                "acceptedAt": {
                    "type": "integer"
                },
                "isAccepted": {
                    "type": "boolean"
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "request.TokenRefresh": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "zmeax95wF+Ha8y3awjtr4i0ZGlDGjkRw3aPd8qNWYIW7DMbDW7fQ=="
                }
            }
        },
        "request.TokenValidate": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string",
                    "example": "zmeax95wF+Ha8y3awjtr4i0ZGlDGjkRw3aPd8qNWYIW7DMbDW7fQ=="
                }
            }
        },
        "request.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "user"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.UserLogout": {
            "type": "object",
            "required": [
                "sessionID",
                "user"
            ],
            "properties": {
                "sessionID": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "request.UserPasswordReset": {
            "type": "object",
            "properties": {
                "loginId": {
                    "type": "string",
                    "example": "john.doe@email.com"
                },
                "rut": {
                    "type": "string",
                    "example": "44444444-4"
                }
            }
        },
        "request.UserRUT": {
            "type": "object",
            "required": [
                "rut"
            ],
            "properties": {
                "rut": {
                    "type": "string",
                    "example": "13851140-5"
                }
            }
        },
        "request.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "lastName",
                "name",
                "password",
                "rut",
                "termsAndConditions"
            ],
            "properties": {
                "birthDate": {
                    "type": "string",
                    "example": "10-10-1980"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@email.com"
                },
                "genderId": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        6,
                        7
                    ]
                },
                "lastName": {
                    "type": "string"
                },
                "motherSurname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "rut": {
                    "type": "string"
                },
                "termsAndConditions": {
                    "$ref": "#/definitions/request.TermsAndConditions"
                }
            }
        },
        "response.AccountConfirmCheck": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "response.CheckUserExists": {
            "type": "object",
            "properties": {
                "maskedEmail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "userExists": {
                    "type": "boolean"
                }
            }
        },
        "response.Gender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        6,
                        7
                    ]
                },
                "name": {
                    "type": "string",
                    "enum": [
                        "Mujer",
                        " Hombre",
                        " Prefiero no decir",
                        " No me identifico con las opciones disponibles",
                        " otros"
                    ]
                }
            }
        },
        "response.GenerateResetTokenResponse": {
            "type": "object",
            "properties": {
                "maskedEmail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Login": {
            "type": "object",
            "properties": {
                "authToken": {
                    "type": "string",
                    "example": "MDkyMDQyMDE4zHKOO4hRw3aPd8qNWYIW7DMbDW7fQ=="
                },
                "creationTime": {
                    "type": "integer",
                    "example": 1686685725423
                },
                "refreshToken": {
                    "type": "string",
                    "example": "MDE4zHKOO4hRw3aPd8qNWYIW7DMbDWs37fR=="
                },
                "sessionID": {
                    "type": "string",
                    "example": "30c33dc8-5js3-4af1-a5c2-d40ecb60bee"
                },
                "user": {
                    "$ref": "#/definitions/models.CustomerInfo"
                }
            }
        },
        "response.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.PasswordChangeStatus": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string",
                    "example": "MDgyMVty6gcZ5+ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O1plCn5lFTZq00ilDDyoZH7yoA"
                },
                "token": {
                    "type": "string",
                    "example": "MDkyMDQyMDE4zW1Q0n5+bjOVymIxjUDOvPubvHnrhUsZv6hQcR/K1Tg9Dp8DL/0X+WhTy21eKQaA2w0FIyxw=="
                }
            }
        },
        "response.PasswordResetResponse": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "isRedirection": {
                    "type": "boolean"
                },
                "redirect": {
                    "type": "string"
                }
            }
        },
        "response.ResetTokenStatus": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@email.com"
                },
                "token": {
                    "type": "string",
                    "example": "ygvaD8A3ZjR6fkpVAPbCX72Kqg0lFZmHezXWMzj3O"
                },
                "url": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "response.TokenStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "HeiKomInn API",
	Description:      "This is an authentication API used to register new customers, authenticate them and manage their session",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
